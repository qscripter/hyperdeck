!function(){"use strict";angular.module("hyperdeckUi",["ngAnimate","ngCookies","ngTouch","ngSanitize","ui.router","ui.bootstrap","ngWebSocket"])}(),function(){"use strict";function n(n,e,t,a){function o(){var e="ws://"+a.host()+":8888",o=t(e);o.onMessage(function(n){var e,t=JSON.parse(n.data);_.has(t,"connectionStatus")?(e=s(t._id),e&&(e.connectionStatus=t.connectionStatus)):_.has(t,"event")&&(e=s(t._id),e&&e.events.unshift(t.event))}),m.hyperdecks=n,_.map(m.hyperdecks,i),_.map(m.hyperdecks,d),_.map(m.hyperdecks,p)}function s(n){return _.findWhere(m.hyperdecks,{_id:n})}function c(n){e.connect(n._id)}function r(n){e.setRemote(n._id,n.remoteEnabled)}function l(n,t){e.sendTransportCommand(n,t)}function i(n){e.getEvents(n._id).then(function(e){n.events=e})}function d(n){"Connected"===n.connectionStatus&&e.getConfiguration(n._id).then(function(e){n.configuration=e})}function p(n){"Connected"===n.connectionStatus&&e.getTransportInfo(n._id).then(function(e){n.transportInfo=e})}function u(n,t){"Connected"===n.connectionStatus&&e.getSlotInfo(n._id,t).then(function(e){_.has(n,"slotInfo")||(n.slotInfo={}),n.slotInfo[t]=e})}var m=this;o(),m.updateRemote=r,m.sendTransportCommand=l,m.getEvents=i,m.connect=c,m.getConfiguration=d,m.getTransportInfo=p,m.getSlotInfo=u}angular.module("hyperdeckUi").controller("HyperdecksCtrl",n),n.$inject=["hyperdecks","Hyperdeck","$websocket","$location"]}(),function(){"use strict";function n(n){function e(){return n.get(m).then(d)}function t(e,t){return n.post(m+"/"+e+"/command",{remote:t})}function a(e,t){return n.post(m+"/"+e+"/command",{transportCommand:t})}function o(e){return n.get("/api/events",{params:{hyperDeck:e}}).then(d)}function s(e){return n.post(i(e)+"/command",{connect:!0})}function c(e){return n.get(i(e)+"/configuration").then(d)}function r(e,t){return n.get(i(e)+"/slot/"+t).then(d).then(p)}function l(e){return n.get(i(e)+"/transport-info").then(d)}function i(n){return m+"/"+n}function d(n){return n.data}function p(n){return _.has(n.params,"recording time")&&(n.params["recording time"]=Math.floor(n.params["recording time"]/60)),n}var u={getAll:e,setRemote:t,sendTransportCommand:a,getEvents:o,connect:s,getConfiguration:c,getTransportInfo:l,getSlotInfo:r},m="/api/hyperdecks";return u}angular.module("hyperdeckUi").service("Hyperdeck",n),n.$inject=["$http"]}(),function(){"use strict";function n(n,e,t){function a(){s(),n(function(){c.classAnimation="rubberBand"},4e3)}function o(){t.info('Fork <a href="https://github.com/Swiip/generator-gulp-angular" target="_blank"><b>generator-gulp-angular</b></a>'),c.classAnimation=""}function s(){c.awesomeThings=e.getTec(),angular.forEach(c.awesomeThings,function(n){n.rank=Math.random()})}var c=this;c.awesomeThings=[],c.classAnimation="",c.creationDate=1435441146383,c.showToastr=o,a()}angular.module("hyperdeckUi").controller("MainController",n),n.$inject=["$timeout","webDevTec","toastr"]}(),function(){"use strict";function n(n){n.debug("runBlock end")}angular.module("hyperdeckUi").run(n),n.$inject=["$log"]}(),function(){"use strict";function n(n,e){n.state("hyperdecks",{url:"/",templateUrl:"app/components/hyperdecks/hyperdecks.html",controller:"HyperdecksCtrl",controllerAs:"vm",resolve:{hyperdecks:["Hyperdeck",function(n){return n.getAll()}]}}),e.otherwise("/")}angular.module("hyperdeckUi").config(n),n.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";angular.module("hyperdeckUi").constant("malarkey",malarkey).constant("toastr",toastr).constant("moment",moment)}(),function(){"use strict";function n(n,e){n.debugEnabled(!0),e.options.timeOut=3e3,e.options.positionClass="toast-top-right",e.options.preventDuplicates=!0,e.options.progressBar=!0}angular.module("hyperdeckUi").config(n),n.$inject=["$logProvider","toastr"]}(),angular.module("hyperdeckUi").run(["$templateCache",function(n){n.put("app/main/main.html",'<nav class="navbar navbar-inverse navbar-fixed-top"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" href="#">HyperDeck Control</a></div><div id="navbar" class="navbar-collapse collapse"><ul class="nav navbar-nav"><li class="active"><a href="#">Home</a></li></ul></div></div></nav><div class="container main">App sauce.</div>'),n.put("app/components/hyperdecks/hyperdecks.html",'<nav class="navbar navbar-inverse navbar-fixed-top"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" href="#">HyperDeck Control</a></div><div id="navbar" class="navbar-collapse collapse"></div></div></nav><div class="container main"><div ng-repeat="hyperdeck in vm.hyperdecks" class="panel panel-default" ng-class="{ \'panel-success\': hyperdeck.connectionStatus===\'Connected\', \'panel-danger\': hyperdeck.connectionStatus===\'Timed Out\' }"><div class="panel-heading"><h1 class="panel-title">{{hyperdeck.name}}</h1></div><div class="panel-body"><h3>Control</h3><div class="row"><div class="col-md-8"><button class="btn btn-large btn-primary" ng-click="vm.connect(hyperdeck)" ng-disabled="hyperdeck.connectionStatus===\'Connected\'">Connect</button></div><div class="col-md-4"><label class="checkbox-inline"><input type="checkbox" ng-model="hyperdeck.remoteEnabled" ng-change="vm.updateRemote(hyperdeck)"> Control Enabled</label><br><div class="btn-group"><button class="btn btn-default" ng-disabled="!hyperdeck.remoteEnabled" ng-click="vm.sendTransportCommand(hyperdeck._id, \'play: speed: -400\')"><span class="glyphicon glyphicon-backward" aria-hidden="true"></span></button> <button class="btn btn-default" ng-disabled="!hyperdeck.remoteEnabled" ng-click="vm.sendTransportCommand(hyperdeck._id, \'record\')"><span class="glyphicon glyphicon-record" aria-hidden="true"></span></button> <button class="btn btn-default" ng-disabled="!hyperdeck.remoteEnabled" ng-click="vm.sendTransportCommand(hyperdeck._id, \'play\')"><span class="glyphicon glyphicon-play" aria-hidden="true"></span></button> <button class="btn btn-default" ng-disabled="!hyperdeck.remoteEnabled" ng-click="vm.sendTransportCommand(hyperdeck._id, \'play: speed: 400\')"><span class="glyphicon glyphicon-forward" aria-hidden="true"></span></button> <button class="btn btn-default" ng-disabled="!hyperdeck.remoteEnabled" ng-click="vm.sendTransportCommand(hyperdeck._id, \'stop\')"><span class="glyphicon glyphicon-stop" aria-hidden="true"></span></button></div></div></div><h3>Status</h3><div class="row"><div class="col-md-4"><form class="form-horizontal"><h4>Connection</h4><div class="form-group"><label class="col-sm-6 control-label">Description</label><div class="col-sm-6"><p class="form-control-static">{{hyperdeck.description}}</p></div></div><div class="form-group"><label class="col-sm-6 control-label">Connection Status</label><div class="col-sm-6"><p class="form-control-static">{{hyperdeck.connectionStatus}}</p></div></div><div class="form-group"><label class="col-sm-6 control-label">IP Address</label><div class="col-sm-6"><p class="form-control-static">{{hyperdeck.ipAddress}}</p></div></div><div class="form-group"><label class="col-sm-6 control-label">Active</label><div class="col-sm-6"><p class="form-control-static">{{hyperdeck.active}}</p></div></div><div class="form-group"><label class="col-sm-6 control-label">Remote Enabled</label><div class="col-sm-6"><p class="form-control-static">{{hyperdeck.remoteEnabled}}</p></div></div><br><h4>Configuration <button class="btn btn-sm btn-default pull-right" ng-click="vm.getConfiguration(hyperdeck)">Refresh</button></h4><div class="form-group" ng-repeat="(key, value) in hyperdeck.configuration.params"><label class="col-sm-6 control-label">{{key}}</label><div class="col-sm-6"><p class="form-control-static">{{value}}</p></div></div><br><h4>Transport <button class="btn btn-sm btn-default pull-right" ng-click="vm.getTransportInfo(hyperdeck)">Refresh</button></h4><div class="form-group" ng-repeat="(key, value) in hyperdeck.transportInfo.params"><label class="col-sm-6 control-label">{{key}}</label><div class="col-sm-6"><p class="form-control-static">{{value}}</p></div></div><br><h4>Slot 1 <button class="btn btn-sm btn-default pull-right" ng-click="vm.getSlotInfo(hyperdeck, 1)">Refresh</button></h4><div class="form-group" ng-repeat="(key, value) in hyperdeck.slotInfo[1].params"><label class="col-sm-6 control-label">{{key}}</label><div class="col-sm-6"><p class="form-control-static">{{value}}</p></div></div><br><h4>Slot 2 <button class="btn btn-sm btn-default pull-right" ng-click="vm.getSlotInfo(hyperdeck, 2)">Refresh</button></h4><div class="form-group" ng-repeat="(key, value) in hyperdeck.slotInfo[2].params"><label class="col-sm-6 control-label">{{key}}</label><div class="col-sm-6"><p class="form-control-static">{{value}}</p></div></div></form></div><div class="col-md-6 events"><table class="table table-hover table-striped"><thead><tr><th>Event Type</th><th>Time</th><th>Message</th><th><button class="btn btn-sm btn-default pull-right" ng-click="vm.getEvents(hyperdeck)">Refresh</button></th></tr></thead><tbody><tr ng-repeat="event in hyperdeck.events|limitTo:10"><td>{{event.message}}</td><td>{{event.timeStamp|date:\'h:mm:ss a\'}}</td><td><span ng-repeat="(key, value) in event.params">{{key}}: {{value}}</span></td><td></td></tr></tbody></table></div></div></div></div></div>')}]);